# Generated by ariadne-codegen
# Source: graphql_to_mcp/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import Product


class ListProducts(BaseModel):
    products: Optional["ListProductsProducts"]


class ListProductsProducts(BaseModel):
    page_info: "ListProductsProductsPageInfo" = Field(alias="pageInfo")
    total_count: Optional[int] = Field(alias="totalCount")
    edges: List["ListProductsProductsEdges"]


class ListProductsProductsPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    start_cursor: Optional[str] = Field(alias="startCursor")
    end_cursor: Optional[str] = Field(alias="endCursor")


class ListProductsProductsEdges(BaseModel):
    node: "ListProductsProductsEdgesNode"


class ListProductsProductsEdgesNode(Product):
    pass


ListProducts.model_rebuild()
ListProductsProducts.model_rebuild()
ListProductsProductsEdges.model_rebuild()
